
/---------------------- 04-12-2016 08:27:46 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 443974679
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 775907777
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 443974679
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 775907777
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:27:49 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK

/---------------------- 04-12-2016 08:29:03 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 662206297
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 1450901063
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 662206297
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:06 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 1450901063
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:29:07 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK

/---------------------- 04-12-2016 08:30:24 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 714300816
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 1352878263
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 714300816
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 1352878263
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:30:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK

/---------------------- 04-12-2016 08:34:18 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 1489247112
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 1696161338
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [  ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [  ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 1489247112
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 1696161338
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:34:21 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK

/---------------------- 04-12-2016 08:38:23 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 1070503821
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 2133264375
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 1070503821
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 2133264375
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:38:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 2061901632
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 509701928
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 2061901632
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 509701928
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:26 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 1542160262
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 1070985114
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 1542160262
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 1070985114
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:27 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 310144903
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 1186975634
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 310144903
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 1186975634
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:39:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK

/---------------------- 04-12-2016 08:41:25 ----------------------/
I.	Se comienza a llenar la lista de Handlers del HandlerManager
I.	Se inicializo correctamente el HandlerManager
I.	Comienza el servidor en el puerto8000 con la db en /tmp/prod
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri = /users/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SignUp
I.	Se corrobora el campo del username dentro de la request
I.	Corrobora en la base de datos si ya existe el usuario
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	El usuario no existe
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016
", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando LikeTom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = sessions
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri = /sessions/
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo Login
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Se fija si la contrasenia es correcta
I.	La contrasenia es correcta
I.	Se crea el token de autentificacion para el usuario
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = addFriend
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando header = 466847064
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Http request : recuperando uri = /users/matias/addFriend/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Agregando notificacion 1.matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = acceptFriend
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando header = 359453518
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Http request : recuperando uri = /users/gguzeta/acceptFriend/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [ "1.matias" ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando notificacion
I.	Agregando amigo 2gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Agregando amigo 2matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
W.	ChatData de gguzetamatias ya existe
I.	HttpRequest : seteando respuesta
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: hola
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion matias: como va
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri por indice = POST
I.	Confirma que es un Handler tipo PostChatHandler
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va" ] }
I.	Se encontro en la base de datos
I.	Http request : recuperando uri = /chat/gguzeta/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Se encontro en la base de datos
I.	Agregando notificacion gguzeta: bien y vos?
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	Values serializados para la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/matias
I.	Http request : recuperando header = 466847064
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "matias" ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando amigo
I.	Borrando amigo matias
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Key seteada para abrir db
T.	UserMetadata : Key db : matias.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [ "gguzeta" ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db dematias
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = users
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando uri por indice = DELETE
I.	Confirma que es un Handler tipo UserDelete
I.	Http request : recuperando uri = /users/gguzeta
I.	Http request : recuperando header = 359453518
I.	Se recibe la httprequest y se verifica token
I.	Se corrobora si existe el usuario
I.	El usuario existe
I.	Se corrobora si el token de autentificacion es el correcto
I.	El token es el correcto
I.	Http request : recuperando uri = /users/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : Tom.usertoken
I.	Se encontro en la base de datos
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [ "Tom" ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Eliminando Like
I.	Borrando amigo Tom
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	UserMetadata : Values recuperados de la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se encontro en la base de datos
I.	Key seteada para abrir db
T.	UserMetadata : Key db : gguzeta.usertoken
I.	Values serializados para la db
T.	UserMetadata : Values db : { "join_date" : "Sun Dec  4 20:41:28 2016\n", "email" : "", "resume" : "", "skillList" : "[]", "jobList" : "[]", "ultima_ubicacion" : "", "notificaciones" : [  ], "friendList" : [  ], "likeList" : [  ], "name" : "", "picture" : "" }
I.	Se elimino la metadata de la db degguzeta
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
I.	Inicializando http request concrete
I.	Se busca que handler debe manejar la request
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SignUp
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogIn
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LogOut
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGet
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserModify
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo UserGetProfile
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SendFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo LikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo DisLikeHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo RespondFriendRequestHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo JobGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo FriendDelete
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo SkillGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopRankGetHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo TopJobHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Se evalua la httprequest y se verifica que tipo de handler debe tomarla
I.	Verifica que se trate de un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = chat
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri por indice = GET
I.	Confirma que es un Handler tipo GetChatHandler
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Http request : recuperando uri = /chat/matias/gguzeta
I.	Corrobora que el puntero db vaya a una base de datos
I.	Si se encontro la base de datos
I.	Se busca si el elemento se encuentra la base de datos
I.	Key seteada para abrir db
T.	ChatData : Key db : gguzetamatias.chattoken
I.	ChatData : Values recuperados de la db
T.	ChatData : Values db : { "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	Se encontro en la base de datos
I.	Perfil de gguzetamatias es { "username" : "gguzetamatias", "mensajes" : [ "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?", "matias: hola", "matias: como va", "gguzeta: bien y vos?" ] }
I.	HttpRequest : seteando respuesta
I.	Respuesta OK
